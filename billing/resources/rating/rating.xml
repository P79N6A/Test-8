<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://code.alibabatech.com/schema/dubbo
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样--> 
	<dubbo:application name="ratingprovider" />

	<dubbo:registry address="multicast://224.5.6.7:1234" />
	
<!--	   <dubbo:registry address="zookeeper://172.168.1.211:2185" /> -->
	
<!--	<dubbo:registry address="zookeeper://127.0.0.1:2181" />-->
	
	<dubbo:protocol name="dubbo" port="-1" dispather="message" threadpool="fixed" threads="10"/>
	
		<!-- memcached 支持 -->
	<bean class="com.tydic.uda.resolver.mem.MemcachedOperateResolver">
		<property name="memcachedAddress" value="172.168.1.217:12001" />
		<property name="connectionPoolSize" value="1" />
	</bean>
	
	
	<!-- uda -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.tydic.vds.jdbc.VdsDriver" />
		 <property name="url" value="jdbc:vds:local://classpath?directsql=true&amp;loadxml=true&amp;loaddb=false" />
	</bean>

	<bean class="com.tydic.uda.service.factory.XmlDataServiceFactory">
		<property name="dataSource" ref="dataSource" />
		<property name="serviceLocations" >
			<list>
			<!-- <value>./daoservices/accountdataService.xml</value> -->
				<value>dataService.xml</value>
			</list>
		</property>
	</bean>

<!--	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
 	<tx:advice id="txAdvice" transaction-manager="tm">
		<tx:attributes>       
			<tx:method name="update*"  />
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>	
	<aop:config>
		<aop:pointcut id="service" expression="execution(* com.tydic.beijing.billing.rating.service.impl.RatableResourceUpdate.*(..))"/>
		<aop:advisor pointcut-ref="service" advice-ref="txAdvice"/>
	</aop:config>
 -->
	<!-- <dubbo:reference id="demoService" interface="com.tjwrxy.dubboprovider.DemoService" 
		/> -->
	<bean id="applicationContextHelper"
		class="com.tydic.beijing.billing.rating.service.ApplicationContextHelper"></bean>
	<bean
		class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
	
	<!-- <bean id="rating"
		class="com.tydic.beijing.billing.rating.service.impl.RatingImpl"  lazy-init ="true"/>  -->
	<!-- <bean id="InfoUser" class="com.tydic.beijing.billing.dao.InfoUser" />
	<bean id="RatingMsg" class="com.tydic.beijing.billing.rating.domain.RatingMsg" />
	<bean id="RatingData" class="com.tydic.beijing.billing.rating.domain.RatingData" /> 
	<bean id="BalanceData" class="com.tydic.beijing.billing.rating.domain.BalanceData" /> 
	<bean id="BaseMsg" class="com.tydic.beijing.billing.rating.domain.BaseMsg" />
	<bean id="BalanceContent" class="com.tydic.beijing.billing.rating.domain.BalanceContent" />-->
	<bean id="MsgParsing"
		class="com.tydic.beijing.billing.rating.service.impl.MsgParsingImpl" />
	
	
	<bean id="RatingMacro" class="com.tydic.beijing.billing.rating.domain.RatingMacro" />
	
	<bean id="rating"
		class="com.tydic.beijing.billing.rating.service.impl.ChargeInitImpl" />
	<bean id="dbUtil" class="com.tydic.beijing.billing.rating.dto.impl.DbUtilImpl" />
	<bean id="dbConfigDetail" class="com.tydic.beijing.billing.rating.dto.DbConfigDetail"
		lazy-init="true" init-method="getDbConfig" />
 
	
	<!-- --> <bean id="CalculateFee"
		class="com.tydic.beijing.billing.rating.service.impl.CalculateFee" />
		
		
		
	 <bean id="DeductResourceAcct"
		class="com.tydic.beijing.billing.rating.service.impl.DeductResourceAcct"  />  
		
	<!-- <bean id="DirectRating"
		class="com.tydic.beijing.billing.rating.service.impl.DirectRating" />  


	<bean id="RatableResourceUpdate"  class="com.tydic.beijing.billing.rating.service.impl.RatableResourceUpdate"/>
 	<bean id="TariffCalcImpl"  class="com.tydic.beijing.billing.rating.service.impl.TariffCalcImpl"/>
 	<bean id="RateCondCheck"  class="com.tydic.beijing.billing.rating.domain.RateCondCheck"/>
 	<bean id="PricingSectionImpl"   class="com.tydic.beijing.billing.rating.service.impl.PricingSectionImpl"/>
 	<bean id="RateDinnerFormulaImpl"  class="com.tydic.beijing.billing.rating.service.impl.RateDinnerFormulaImpl"/>
 	<bean id="GroupRatingSvc"  class="com.tydic.beijing.billing.rating.service.impl.GroupRatingSvc" scope="prototype"/>
 	<bean id="RatableResourceExtractionImpl" class="com.tydic.beijing.billing.rating.service.impl.RatableResourceExtractionImpl"/>
 	<bean id="DinnerConversionImpl"  class="com.tydic.beijing.billing.rating.service.impl.DinnerConversionImpl"/>
 	
 	<bean id="QueryRemainResource" class="com.tydic.beijing.billing.rating.service.impl.QueryRemainResource"  />
 	-->
 	
	<!-- 声明需要暴露的服务接口-->
	<dubbo:service interface="com.tydic.beijing.billing.rating.service.Rating" ref="rating" /> 

	<!-- <dubbo:service interface=" com.tydic.beijing.billing.rating.service.QueryRemainResourceList "  ref="QueryRemainResource"/> -->

<import resource="writeoff.xml"  /> 


	<!-- 资源到账 -->
	
	<bean id= "createBookOps" class="com.tydic.beijing.billing.account.biz.CreateAccountBookOps">
		<property name="balanceTypes" ref="dSBalanceType"/>
	</bean>
	
	<bean id="balanceChgOps"  class="com.tydic.beijing.billing.cyclerent.biz.BalanceChangeOps"/>
	<bean id="createBook"   class="com.tydic.beijing.billing.account.service.impl.CreateAccountBookImpl">
		<property name="ops" ref="createBookOps"/>
	</bean>
	
	<bean id="cycleRentOps" class="com.tydic.beijing.billing.cyclerent.biz.CycleRentOps">
		<property name="bcOps" ref="balanceChgOps"/>
	</bean>
	
	<bean id="cycleRent"  class="com.tydic.beijing.billing.cyclerent.service.impl.CycleRentForRatingImpl">
		<property name="ops" ref="cycleRentOps"/>
		<property name="cabOps"  ref="createBook"/>
	</bean>
	
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />


</beans>