<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://code.alibabatech.com/schema/dubbo
	http://code.alibabatech.com/schema/dubbo/dubbo.xsd
	 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
     http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<import resource="./uda.xml" />
	<context:annotation-config />
	<context:component-scan base-package="com.tydic.beijing.billing.account.datastore" />

	<dubbo:application name="accountprocess" />

	<dubbo:registry file=".dubbodubbo-process-registry.cache" address="zookeeper://172.168.1.217:2181" />

	<dubbo:protocol name="dubbo" port="-1" dispather="message" threadpool="fixed" threads="24"/>

	<dubbo:service
		interface="com.tydic.beijing.billing.account.service.AccountProcess"
		ref="accountProcess" loadbalance="consistenthash" />
	
	<import resource="./writeoff.xml" />
	<import resource="./simulatewriteoff.xml"/>
	
	<bean id="accountProcessOps" class="com.tydic.beijing.billing.account.biz.AccountProcessOps" scope="prototype"/>
	
	<bean id="accountProcess"
		class="com.tydic.beijing.billing.account.service.impl.AccountProcessImpl" scope="prototype">
	</bean>
</beans>
