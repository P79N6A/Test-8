package com.tydic.beijing.billing.others;

import com.tydic.uda.service.S;
import com.tydic.uda.core.Condition;
import org.dom4j.Attribute;
import org.dom4j.Document;
import org.dom4j.DocumentException;
import org.dom4j.Element;
import org.dom4j.io.SAXReader;
import org.springframework.transaction.annotation.Transactional;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

public class CtcImport {

    public String fileDir ;
    public String fileBakDir;

    public String getFileDir() {
        return fileDir;
    }

    public void setFileDir(String fileDir) {
        this.fileDir = fileDir;
    }

    public String getFileBakDir() {
        return fileBakDir;
    }

    public void setFileBakDir(String fileBakDir) {
        this.fileBakDir = fileBakDir;
    }

    @Transactional(rollbackFor = Exception.class)
    public void ctcImport(File file) throws  Exception{

        CtcCardImportInfo ctcCardImportInfo = getElementsList(file);

            insertFileAllDate(ctcCardImportInfo);

            List<CtcCardImportDetail> ctcCardImportDetailList = ctcCardImportInfo.getCtcCardImportDetailList();
                int i = insertFileDateDate(ctcCardImportDetailList);
                System.out.println(i);


    }

    public void insertFileAllDate(CtcCardImportInfo allDate) throws Exception {
        S.get(CtcCardImportInfo.class).create(allDate);
    }

    /**
     *
     * dateè¡¨<br/>
     *
     * @param list<dateDate>
     */
    public int insertFileDateDate(List<CtcCardImportDetail> list) throws Exception {

        int i = S.get(CtcCardImportDetail.class).pBatch(Condition.empty(), list);
        return i;
    }

    @SuppressWarnings("unchecked")
    public CtcCardImportInfo getElementsList(File file) {

        SAXReader reader = new SAXReader();
        List<CtcCardImportInfo> monthList = new ArrayList<CtcCardImportInfo>();
        CtcCardImportInfo fileall = new CtcCardImportInfo();

        try {

            Document docment = reader.read(file);
            Element root = docment.getRootElement();


            Element Body = root.element("Body");
            Element Record = Body.element("Record");

            String MVNO = Record.elementText("MVNO");
            String CityCode = Record.elementText("CityCode");
            fileall.setMVNO(MVNO);
            fileall.setCityCode(CityCode);

            Element hlrInfo = Record.element("hlrInfo");
            Attribute HlrIdattr = hlrInfo.attribute("HlrId");
            Attribute HlrDescattr = hlrInfo.attribute("HlrDesc");
            String HlrId = HlrIdattr.getValue();
            String HlrDesc = HlrDescattr.getValue();
            fileall.setHirld(HlrId);
            fileall.setHirDesc(HlrDesc);

            Element Service = Record.element("Service");
            String serviceId = Service.attributeValue("ServiceId");
            String serviceName = Service.attributeValue("ServiceName");
            fileall.setServiceId(serviceId);
            fileall.setServiceName(serviceName);

            Element CardType = Service.element("CardType");
            String  Capacity = CardType.elementText("Capacity");
            String  AdnNum = CardType.elementText("AdnNum");
            String  SmsNum = CardType.elementText("SmsNum");
            fileall.setCapacity(Capacity);
            fileall.setAdnNum(AdnNum);
            fileall.setSmsNum(SmsNum);

            String Artwork = Service.elementText("Artwork");
            String BrochureFlag = Service.elementText("BrochureFlag");
            String UserPassFlag = Service.elementText("UserPassFlag");
            String MdnFlag = Service.elementText("MdnFlag");
            fileall.setArtWork(Artwork);
            fileall.setBrochureFlag(BrochureFlag);
            fileall.setUserPaaFlag(UserPassFlag);
            fileall.setMdnFlag(MdnFlag);

            Element brand = Service.element("brand");
            String brandId = brand.attributeValue("brandId");
            String brandName = brand.attributeValue("brandName");
            String userLevel = brand.attributeValue("userLevel");
            fileall.setBrandId(brandId);
            fileall.setBrandName(brandName);
            fileall.setUserLevel(userLevel);

            String Quantity = Record.elementText("Quantity");
            fileall.setQuantity(Quantity);

            Element Deliver = Record.element("Deliver");
            String deliverAddress = Deliver.elementText("DeliverAddress");
            String deliverDate = Deliver.elementText("DeliverDate");
            fileall.setDeliverAddress(deliverAddress);
            fileall.setDeliverDate(deliverDate);

            Element cardOperType = Record.element("CardOperType");
            String cardOperTypeId = cardOperType.attributeValue("CardOperTypeId");
            String cardOperTypeName = cardOperType.attributeValue("CardOperTypeName");
            fileall.setCardOperTypeId(cardOperTypeId);
            fileall.setCardOperTypeName(cardOperTypeName);

            fileall.setFILE_NAME(file.getName());

            List<Element> Datas = new ArrayList<Element>();
            List<CtcCardImportDetail> ctcCardImportDetailList = new ArrayList<CtcCardImportDetail>();
            Datas = Record.elements("Data");
            for (Element Data : Datas) {
                CtcCardImportDetail ctcCardImportDetail = new CtcCardImportDetail();

                String iccid = Data.elementText("ICCID");
                String imsi = Data.elementText("IMSI");
                String pin1 = Data.elementText("PIN1");
                String puk1 = Data.elementText("PUK1");
                String pin2 = Data.elementText("PIN2");
                String puk2 = Data.elementText("PUK2");
                String adm = Data.elementText("ADM");
                String uimid = Data.elementText("UIMID");

                ctcCardImportDetail.setFILE_NAME(file.getName());

                ctcCardImportDetail.setICCID(iccid);
                ctcCardImportDetail.setIMSI(imsi);
                ctcCardImportDetail.setPIN1(pin1);
                ctcCardImportDetail.setPUK1(puk1);
                ctcCardImportDetail.setPIN2(pin2);
                ctcCardImportDetail.setPUK2(puk2);
                ctcCardImportDetail.setADM(adm);
                ctcCardImportDetail.setUIMID(uimid);

                Element gdata = Data.element("GDATA");
                String imsi_g = gdata.elementText("IMSI_G");
                String acc = gdata.elementText("ACC");
                String smsp = gdata.elementText("SMSP");

                Element ltedata = Data.element("LTEDATA");
                String imsi_lte = ltedata.elementText("IMSI_LTE");
                String accl = ltedata.elementText("ACCL");

                ctcCardImportDetail.setIMSI_G(imsi_g);
                ctcCardImportDetail.setACC(acc);
                ctcCardImportDetail.setSMSP(smsp);
                ctcCardImportDetail.setIMSI_LTE(imsi_lte);
                ctcCardImportDetail.setACCL(accl);
                System.out.println("-----");

                System.out.println(ctcCardImportDetail);

                ctcCardImportDetailList.add(ctcCardImportDetail);
            }

            fileall.setCtcCardImportDetailList(ctcCardImportDetailList);
            System.out.println(fileall);
        } catch (DocumentException e) {
            e.printStackTrace();
        }
        return fileall;
    }
}
